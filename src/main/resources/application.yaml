server:
  port: ${APPLICATION_PORT:8080}
spring:
  application:
    name: proposta_api
  # JPA
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  # Datasource - MySQL
  datasource:
    url: ${BANCO_URL:jdbc:mysql://localhost:3306/proposta_api_db?createDatabaseIfNotExist=true&useTimezone=true&serverTimezone=UTC}
    username: ${DB_USER:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Key Cloack
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

# Feign clients URL
feign:
  client:
    config:
      default:
        connection-timeout: 400
        read-timeout: 400
  servico:
    analise: ${SOLICITACAO_URL:http://localhost:9999/api/solicitacao}
    cartao: ${CARTOES_URL:http://localhost:8888/api/cartoes}

# Scheduled
scheduled:
  periodicidade:
    executa-operacao: 30000

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: prometheus,health,info
        exclude: env,beans
    prometheus:
      enable: true
  metrics:
    tags:
      aplicacao: ${spring.application.name:proposta_api}
      ambiente: ${AMBIENTE:desenvolvimento}
  endpoint:
    show-details: always

# Jaeger
opentracing:
  jaeger:
    enabled: ${JAEGER_ENABLED:true}
    service-name: ${SPRING.APPLICATION.NAME:proposta_api}
    http-sender:
      url: ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
    probabilistic-sampler:
      sampling-rate: ${JAEGER_SAMPLER:1}